{"ast":null,"code":"import _classCallCheck from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _possibleConstructorReturn from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _get from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\n/**\r\n * DevExtreme (esm/ui/html_editor/formats/image.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport { isObject } from \"../../../core/utils/type\";\nvar ExtImage = {};\n\nif (Quill) {\n  var Image = Quill.import(\"formats/image\");\n\n  ExtImage = /*#__PURE__*/function (_Image) {\n    _inherits(ExtImage, _Image);\n\n    function ExtImage() {\n      _classCallCheck(this, ExtImage);\n\n      return _callSuper(this, ExtImage, arguments);\n    }\n\n    _createClass(ExtImage, [{\n      key: \"formats\",\n      value: function formats() {\n        var formats = _get(_getPrototypeOf(ExtImage.prototype), \"formats\", this).call(this);\n\n        var floatValue = this.domNode.style.float;\n\n        if (floatValue) {\n          formats.float = floatValue;\n        }\n\n        return formats;\n      }\n    }, {\n      key: \"format\",\n      value: function format(name, value) {\n        if (\"float\" === name) {\n          this.domNode.style[name] = value;\n        } else {\n          _get(_getPrototypeOf(ExtImage.prototype), \"format\", this).call(this, name, value);\n        }\n      }\n    }], [{\n      key: \"create\",\n      value: function create(data) {\n        var SRC = data && data.src || data;\n\n        var node = _get(_getPrototypeOf(ExtImage), \"create\", this).call(this, SRC);\n\n        if (isObject(data)) {\n          var setAttribute = function setAttribute(attr, value) {\n            data[attr] && node.setAttribute(attr, value);\n          };\n\n          setAttribute(\"alt\", data.alt);\n          setAttribute(\"width\", data.width);\n          setAttribute(\"height\", data.height);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"formats\",\n      value: function formats(domNode) {\n        var formats = _get(_getPrototypeOf(ExtImage), \"formats\", this).call(this, domNode);\n\n        formats.imageSrc = domNode.getAttribute(\"src\");\n        return formats;\n      }\n    }, {\n      key: \"value\",\n      value: function value(domNode) {\n        return {\n          src: domNode.getAttribute(\"src\"),\n          width: domNode.getAttribute(\"width\"),\n          height: domNode.getAttribute(\"height\"),\n          alt: domNode.getAttribute(\"alt\")\n        };\n      }\n    }]);\n\n    return ExtImage;\n  }(Image);\n\n  ExtImage.blotName = \"extendedImage\";\n}\n\nexport default ExtImage;","map":null,"metadata":{},"sourceType":"module"}