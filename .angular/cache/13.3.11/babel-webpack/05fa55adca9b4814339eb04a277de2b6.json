{"ast":null,"code":"import _classCallCheck from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ROUTES } from \"../sidebar/sidebar.component\";\nimport { Location } from \"@angular/common\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-toastr\";\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    \"bg-white\": a0,\n    \"navbar-transparent\": a1\n  };\n};\n\nvar misc = {\n  sidebar_mini_active: true\n};\nexport var AuthNavbarComponent = /*#__PURE__*/(function () {\n  var AuthNavbarComponent = /*#__PURE__*/function () {\n    function AuthNavbarComponent(location, toastr) {\n      _classCallCheck(this, AuthNavbarComponent);\n\n      this.toastr = toastr;\n      this.isCollapsed = true;\n      this.location = location;\n    }\n\n    _createClass(AuthNavbarComponent, [{\n      key: \"minimizeSidebar\",\n      value: function minimizeSidebar() {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (body.classList.contains(\"sidebar-mini\")) {\n          misc.sidebar_mini_active = true;\n        } else {\n          misc.sidebar_mini_active = false;\n        }\n\n        if (misc.sidebar_mini_active === true) {\n          body.classList.remove(\"sidebar-mini\");\n          misc.sidebar_mini_active = false;\n          this.showSidebarMessage(\"Sidebar mini deactivated...\");\n        } else {\n          body.classList.add(\"sidebar-mini\");\n          this.showSidebarMessage(\"Sidebar mini activated...\");\n          misc.sidebar_mini_active = true;\n        } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n        var simulateWindowResize = setInterval(function () {\n          window.dispatchEvent(new Event(\"resize\"));\n        }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n        setTimeout(function () {\n          clearInterval(simulateWindowResize);\n        }, 1000);\n      }\n    }, {\n      key: \"showSidebarMessage\",\n      value: function showSidebarMessage(message) {\n        this.toastr.show('<span data-notify=\"icon\" class=\"tim-icons icon-bell-55\"></span>', message, {\n          timeOut: 4000,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: \"toast-top-right\"\n        });\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.listTitles = ROUTES.filter(function (listTitle) {\n          return listTitle;\n        });\n      }\n    }, {\n      key: \"getTitle\",\n      value: function getTitle() {\n        var titlee = this.location.prepareExternalUrl(this.location.path());\n        titlee = titlee.split(\"/\")[2];\n\n        for (var i = 0; i < this.listTitles.length; i++) {\n          if (this.listTitles[i].type === \"sub\") {\n            for (var j = 0; j < this.listTitles[i].children.length; j++) {\n              if (this.listTitles[i].children[j].path === titlee) {\n                return this.listTitles[i].children[j].title;\n              }\n            }\n          }\n        }\n\n        return \"Black Dashboard PRO Angular\";\n      }\n    }]);\n\n    return AuthNavbarComponent;\n  }();\n\n  AuthNavbarComponent.ɵfac = function AuthNavbarComponent_Factory(t) {\n    return new (t || AuthNavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  AuthNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthNavbarComponent,\n    selectors: [[\"app-auth-navbar\"]],\n    decls: 14,\n    vars: 6,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"fixed-top\", 3, \"ngClass\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-toggle\", \"d-inline\"], [\"type\", \"button\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\"], [\"aria-label\", \"Toggle navigation\", \"id\", \"navigation\", \"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"navbar-kebab\"]],\n    template: function AuthNavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵelement(5, \"span\", 5)(6, \"span\", 6)(7, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"a\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AuthNavbarComponent_Template_button_click_10_listener() {\n          return ctx.isCollapsed = !ctx.isCollapsed;\n        });\n        i0.ɵɵelement(11, \"span\", 10)(12, \"span\", 10)(13, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx.isCollapsed === false, ctx.isCollapsed === true));\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getTitle(), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-expanded\", !ctx.isCollapsed);\n      }\n    },\n    directives: [i1.NgClass],\n    styles: [\"\"]\n  });\n  return AuthNavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}