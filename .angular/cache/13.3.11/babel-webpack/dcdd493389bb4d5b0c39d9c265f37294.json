{"ast":null,"code":"import _classCallCheck from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _possibleConstructorReturn from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport { calculateCellIndex } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { calculateStartViewDate } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\nimport { setOptionHour } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport dateUtils from \"../../../../core/utils/date\";\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\nexport var ViewDataGeneratorTimelineMonth = /*#__PURE__*/function (_ViewDataGenerator) {\n  _inherits(ViewDataGeneratorTimelineMonth, _ViewDataGenerator);\n\n  function ViewDataGeneratorTimelineMonth() {\n    _classCallCheck(this, ViewDataGeneratorTimelineMonth);\n\n    return _callSuper(this, ViewDataGeneratorTimelineMonth, arguments);\n  }\n\n  _createClass(ViewDataGeneratorTimelineMonth, [{\n    key: \"_calculateCellIndex\",\n    value: function _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\n      return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount);\n    }\n  }, {\n    key: \"calculateEndDate\",\n    value: function calculateEndDate(startDate, interval, endDayHour) {\n      return setOptionHour(startDate, endDayHour);\n    }\n  }, {\n    key: \"getInterval\",\n    value: function getInterval() {\n      return DAY_IN_MILLISECONDS;\n    }\n  }, {\n    key: \"_calculateStartViewDate\",\n    value: function _calculateStartViewDate(options) {\n      return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount(options) {\n      var intervalCount = options.intervalCount,\n          currentDate = options.currentDate;\n      var cellCount = 0;\n\n      for (var i = 1; i <= intervalCount; i++) {\n        cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate();\n      }\n\n      return cellCount;\n    }\n  }, {\n    key: \"setHiddenInterval\",\n    value: function setHiddenInterval() {\n      this.hiddenInterval = 0;\n    }\n  }]);\n\n  return ViewDataGeneratorTimelineMonth;\n}(ViewDataGenerator);","map":null,"metadata":{},"sourceType":"module"}