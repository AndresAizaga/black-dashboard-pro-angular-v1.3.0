{"ast":null,"code":"import _classCallCheck from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Workdir\\\\JOSE HERNANDEZ\\\\black-dashboard-pro-angular-v1.3.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport var FixedPluginComponent = /*#__PURE__*/(function () {\n  var FixedPluginComponent = /*#__PURE__*/function () {\n    function FixedPluginComponent(toastr) {\n      _classCallCheck(this, FixedPluginComponent);\n\n      this.toastr = toastr;\n      this.sidebarColor = \"red\";\n      this.state = true;\n      this.dashboardColor = true;\n    }\n\n    _createClass(FixedPluginComponent, [{\n      key: \"changeSidebarColor\",\n      value: function changeSidebarColor(color) {\n        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n        this.sidebarColor = color;\n\n        if (sidebar != undefined) {\n          sidebar.setAttribute(\"data\", color);\n        }\n\n        if (mainPanel != undefined) {\n          mainPanel.setAttribute(\"data\", color);\n        }\n      }\n    }, {\n      key: \"changeDashboardColor\",\n      value: function changeDashboardColor(color) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (body && color === \"white-content\") {\n          body.classList.add(color);\n        } else if (body.classList.contains(\"white-content\")) {\n          body.classList.remove(\"white-content\");\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"onChangeDashboardColor\",\n      value: function onChangeDashboardColor(event) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (this.dashboardColor === true) {\n          this.changeDashboardColor(\"\");\n        } else {\n          this.changeDashboardColor(\"white-content\");\n        } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n        var simulateWindowResize = setInterval(function () {\n          window.dispatchEvent(new Event(\"resize\"));\n        }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n        setTimeout(function () {\n          clearInterval(simulateWindowResize);\n        }, 1000);\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(event) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (this.state === true) {\n          body.classList.remove(\"sidebar-mini\");\n          this.showSidebarMessage(\"Sidebar mini deactivated...\");\n        } else {\n          body.classList.add(\"sidebar-mini\");\n          this.showSidebarMessage(\"Sidebar mini activated...\");\n        } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n        var simulateWindowResize = setInterval(function () {\n          window.dispatchEvent(new Event(\"resize\"));\n        }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n        setTimeout(function () {\n          clearInterval(simulateWindowResize);\n        }, 1000);\n      }\n    }, {\n      key: \"showSidebarMessage\",\n      value: function showSidebarMessage(message) {\n        this.toastr.show('<span class=\"now-ui-icons ui-1_bell-53\"></span>', message, {\n          timeOut: 4000,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: \"toast-top-right\"\n        });\n      }\n    }]);\n\n    return FixedPluginComponent;\n  }();\n\n  FixedPluginComponent.ɵfac = function FixedPluginComponent_Factory(t) {\n    return new (t || FixedPluginComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n\n  FixedPluginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FixedPluginComponent,\n    selectors: [[\"app-fixed-plugin\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"fixed-plugin\"]],\n    template: function FixedPluginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    styles: [\"\"]\n  });\n  return FixedPluginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}